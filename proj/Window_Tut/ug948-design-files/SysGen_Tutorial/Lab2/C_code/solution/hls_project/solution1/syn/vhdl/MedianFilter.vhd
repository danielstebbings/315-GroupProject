-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MedianFilter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    row1 : IN STD_LOGIC_VECTOR (7 downto 0);
    row2 : IN STD_LOGIC_VECTOR (7 downto 0);
    row3 : IN STD_LOGIC_VECTOR (7 downto 0);
    V : OUT STD_LOGIC_VECTOR (7 downto 0);
    V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of MedianFilter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "MedianFilter_MedianFilter,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.654000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=74,HLS_SYN_LUT=451,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal pixelWindowBuffer_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal pixelWindowBuffer_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal pixelWindowBuffer_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal pixelWindowBuffer_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal pixelWindowBuffer_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal pixelWindowBuffer_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal temp_10_fu_381_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_10_reg_474 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln14_fu_409_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln14_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_12_fu_423_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_12_reg_487 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln10_fu_127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln10_1_fu_149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln10_2_fu_171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln10_1_fu_141_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln11_fu_193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln10_3_fu_163_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln11_1_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln10_5_fu_185_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln11_2_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_2_fu_207_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln10_fu_133_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln12_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_3_fu_229_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln10_2_fu_155_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln12_1_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_4_fu_251_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln10_4_fu_177_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln12_2_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_1_fu_199_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln11_fu_221_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln13_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_8_fu_295_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln12_2_fu_317_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln13_1_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_7_fu_287_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln12_fu_309_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln13_2_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_9_fu_331_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln11_3_fu_243_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln14_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_6_fu_273_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln13_2_fu_367_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln14_1_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_5_fu_265_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln13_fu_345_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln14_2_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_11_fu_395_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln13_1_fu_359_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln15_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_1_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln15_1_fu_441_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln15_2_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_13_fu_452_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln15_fu_435_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln16_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm <= ap_NS_fsm;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                pixelWindowBuffer_0 <= row1;
                pixelWindowBuffer_1 <= pixelWindowBuffer_0;
                pixelWindowBuffer_3 <= row2;
                pixelWindowBuffer_4 <= pixelWindowBuffer_3;
                pixelWindowBuffer_6 <= row3;
                pixelWindowBuffer_7 <= pixelWindowBuffer_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln14_reg_480 <= select_ln14_fu_409_p3;
                temp_10_reg_474 <= temp_10_fu_381_p3;
                temp_12_reg_487 <= temp_12_fu_423_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    V <= 
        select_ln15_fu_435_p3 when (icmp_ln16_fu_459_p2(0) = '1') else 
        temp_13_fu_452_p3;

    V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            V_ap_vld <= ap_const_logic_1;
        else 
            V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln10_1_fu_149_p2 <= "1" when (unsigned(pixelWindowBuffer_3) > unsigned(pixelWindowBuffer_4)) else "0";
    icmp_ln10_2_fu_171_p2 <= "1" when (unsigned(pixelWindowBuffer_6) > unsigned(pixelWindowBuffer_7)) else "0";
    icmp_ln10_fu_127_p2 <= "1" when (unsigned(pixelWindowBuffer_0) > unsigned(pixelWindowBuffer_1)) else "0";
    icmp_ln11_1_fu_215_p2 <= "1" when (unsigned(select_ln10_3_fu_163_p3) < unsigned(row2)) else "0";
    icmp_ln11_2_fu_237_p2 <= "1" when (unsigned(select_ln10_5_fu_185_p3) < unsigned(row3)) else "0";
    icmp_ln11_fu_193_p2 <= "1" when (unsigned(select_ln10_1_fu_141_p3) < unsigned(row1)) else "0";
    icmp_ln12_1_fu_281_p2 <= "1" when (unsigned(temp_3_fu_229_p3) > unsigned(select_ln10_2_fu_155_p3)) else "0";
    icmp_ln12_2_fu_303_p2 <= "1" when (unsigned(temp_4_fu_251_p3) > unsigned(select_ln10_4_fu_177_p3)) else "0";
    icmp_ln12_fu_259_p2 <= "1" when (unsigned(temp_2_fu_207_p3) > unsigned(select_ln10_fu_133_p3)) else "0";
    icmp_ln13_1_fu_339_p2 <= "1" when (unsigned(temp_8_fu_295_p3) > unsigned(select_ln12_2_fu_317_p3)) else "0";
    icmp_ln13_2_fu_353_p2 <= "1" when (unsigned(temp_7_fu_287_p3) > unsigned(select_ln12_fu_309_p3)) else "0";
    icmp_ln13_fu_325_p2 <= "1" when (unsigned(temp_1_fu_199_p3) > unsigned(select_ln11_fu_221_p3)) else "0";
    icmp_ln14_1_fu_389_p2 <= "1" when (unsigned(temp_6_fu_273_p3) > unsigned(select_ln13_2_fu_367_p3)) else "0";
    icmp_ln14_2_fu_403_p2 <= "1" when (unsigned(temp_5_fu_265_p3) > unsigned(select_ln13_fu_345_p3)) else "0";
    icmp_ln14_fu_375_p2 <= "1" when (unsigned(temp_9_fu_331_p3) > unsigned(select_ln11_3_fu_243_p3)) else "0";
    icmp_ln15_1_fu_431_p2 <= "1" when (unsigned(temp_12_reg_487) > unsigned(select_ln14_reg_480)) else "0";
    icmp_ln15_2_fu_447_p2 <= "1" when (unsigned(temp_10_reg_474) > unsigned(select_ln15_1_fu_441_p3)) else "0";
    icmp_ln15_fu_417_p2 <= "1" when (unsigned(temp_11_fu_395_p3) > unsigned(select_ln13_1_fu_359_p3)) else "0";
    icmp_ln16_fu_459_p2 <= "1" when (unsigned(temp_13_fu_452_p3) > unsigned(select_ln15_fu_435_p3)) else "0";
    select_ln10_1_fu_141_p3 <= 
        pixelWindowBuffer_1 when (icmp_ln10_fu_127_p2(0) = '1') else 
        pixelWindowBuffer_0;
    select_ln10_2_fu_155_p3 <= 
        pixelWindowBuffer_3 when (icmp_ln10_1_fu_149_p2(0) = '1') else 
        pixelWindowBuffer_4;
    select_ln10_3_fu_163_p3 <= 
        pixelWindowBuffer_4 when (icmp_ln10_1_fu_149_p2(0) = '1') else 
        pixelWindowBuffer_3;
    select_ln10_4_fu_177_p3 <= 
        pixelWindowBuffer_6 when (icmp_ln10_2_fu_171_p2(0) = '1') else 
        pixelWindowBuffer_7;
    select_ln10_5_fu_185_p3 <= 
        pixelWindowBuffer_7 when (icmp_ln10_2_fu_171_p2(0) = '1') else 
        pixelWindowBuffer_6;
    select_ln10_fu_133_p3 <= 
        pixelWindowBuffer_0 when (icmp_ln10_fu_127_p2(0) = '1') else 
        pixelWindowBuffer_1;
    select_ln11_3_fu_243_p3 <= 
        select_ln10_5_fu_185_p3 when (icmp_ln11_2_fu_237_p2(0) = '1') else 
        row3;
    select_ln11_fu_221_p3 <= 
        select_ln10_3_fu_163_p3 when (icmp_ln11_1_fu_215_p2(0) = '1') else 
        row2;
    select_ln12_2_fu_317_p3 <= 
        temp_4_fu_251_p3 when (icmp_ln12_2_fu_303_p2(0) = '1') else 
        select_ln10_4_fu_177_p3;
    select_ln12_fu_309_p3 <= 
        select_ln10_4_fu_177_p3 when (icmp_ln12_2_fu_303_p2(0) = '1') else 
        temp_4_fu_251_p3;
    select_ln13_1_fu_359_p3 <= 
        temp_7_fu_287_p3 when (icmp_ln13_2_fu_353_p2(0) = '1') else 
        select_ln12_fu_309_p3;
    select_ln13_2_fu_367_p3 <= 
        select_ln12_fu_309_p3 when (icmp_ln13_2_fu_353_p2(0) = '1') else 
        temp_7_fu_287_p3;
    select_ln13_fu_345_p3 <= 
        select_ln12_2_fu_317_p3 when (icmp_ln13_1_fu_339_p2(0) = '1') else 
        temp_8_fu_295_p3;
    select_ln14_fu_409_p3 <= 
        select_ln13_fu_345_p3 when (icmp_ln14_2_fu_403_p2(0) = '1') else 
        temp_5_fu_265_p3;
    select_ln15_1_fu_441_p3 <= 
        select_ln14_reg_480 when (icmp_ln15_1_fu_431_p2(0) = '1') else 
        temp_12_reg_487;
    select_ln15_fu_435_p3 <= 
        temp_12_reg_487 when (icmp_ln15_1_fu_431_p2(0) = '1') else 
        select_ln14_reg_480;
    temp_10_fu_381_p3 <= 
        temp_9_fu_331_p3 when (icmp_ln14_fu_375_p2(0) = '1') else 
        select_ln11_3_fu_243_p3;
    temp_11_fu_395_p3 <= 
        temp_6_fu_273_p3 when (icmp_ln14_1_fu_389_p2(0) = '1') else 
        select_ln13_2_fu_367_p3;
    temp_12_fu_423_p3 <= 
        select_ln13_1_fu_359_p3 when (icmp_ln15_fu_417_p2(0) = '1') else 
        temp_11_fu_395_p3;
    temp_13_fu_452_p3 <= 
        temp_10_reg_474 when (icmp_ln15_2_fu_447_p2(0) = '1') else 
        select_ln15_1_fu_441_p3;
    temp_1_fu_199_p3 <= 
        select_ln10_1_fu_141_p3 when (icmp_ln11_fu_193_p2(0) = '1') else 
        row1;
    temp_2_fu_207_p3 <= 
        row1 when (icmp_ln11_fu_193_p2(0) = '1') else 
        select_ln10_1_fu_141_p3;
    temp_3_fu_229_p3 <= 
        row2 when (icmp_ln11_1_fu_215_p2(0) = '1') else 
        select_ln10_3_fu_163_p3;
    temp_4_fu_251_p3 <= 
        row3 when (icmp_ln11_2_fu_237_p2(0) = '1') else 
        select_ln10_5_fu_185_p3;
    temp_5_fu_265_p3 <= 
        temp_2_fu_207_p3 when (icmp_ln12_fu_259_p2(0) = '1') else 
        select_ln10_fu_133_p3;
    temp_6_fu_273_p3 <= 
        select_ln10_fu_133_p3 when (icmp_ln12_fu_259_p2(0) = '1') else 
        temp_2_fu_207_p3;
    temp_7_fu_287_p3 <= 
        select_ln10_2_fu_155_p3 when (icmp_ln12_1_fu_281_p2(0) = '1') else 
        temp_3_fu_229_p3;
    temp_8_fu_295_p3 <= 
        temp_3_fu_229_p3 when (icmp_ln12_1_fu_281_p2(0) = '1') else 
        select_ln10_2_fu_155_p3;
    temp_9_fu_331_p3 <= 
        temp_1_fu_199_p3 when (icmp_ln13_fu_325_p2(0) = '1') else 
        select_ln11_fu_221_p3;
end behav;
